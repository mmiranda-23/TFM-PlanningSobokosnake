['/planner/fast-downward.py', '--build', 'release64', '--plan-file', 'sas_plan', '--transform-task', 'preprocess', '/home/maria/Documents/team15/problem-7-2/domain.pddl', '/home/maria/Documents/team15/problem-7-2/problem-7-2.pddl', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
Deleting existing plans
INFO     Running translator.
INFO     translator input: ['/home/maria/Documents/team15/problem-7-2/domain.pddl', '/home/maria/Documents/team15/problem-7-2/problem-7-2.pddl']
INFO     translator arguments: []
INFO     translator time limit: 1799.92s
INFO     translator memory limit: 8192 MB
INFO     callstring: /usr/bin/python /planner/builds/release64/bin/translate/translate.py /home/maria/Documents/team15/problem-7-2/domain.pddl /home/maria/Documents/team15/problem-7-2/problem-7-2.pddl
time limit 1799.92 -> (1800, 1800)
Parsing...
Parsing: [0.010s CPU, 0.013s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.020s CPU, 0.037s wall-clock]
Preparing model... [0.000s CPU, 0.006s wall-clock]
Generated 137 rules.
Computing model... [0.380s CPU, 0.384s wall-clock]
13798 relevant atoms
4190 auxiliary atoms
17988 final queue length
75912 total queue pushes
Completing instantiation... [1.940s CPU, 2.195s wall-clock]
Instantiating: [2.350s CPU, 2.647s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.030s CPU, 0.053s wall-clock]
Checking invariant weight... [0.010s CPU, 0.003s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
161 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.061s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.005s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.130s CPU, 0.149s wall-clock]
Translating task: [3.040s CPU, 3.872s wall-clock]
33236 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
28 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.880s CPU, 0.948s wall-clock]
Reordering and filtering variables...
163 of 163 variables necessary.
1 of 3 mutex groups necessary.
15078 of 15078 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.410s CPU, 0.411s wall-clock]
Translator variables: 163
Translator derived variables: 0
Translator facts: 419
Translator goal facts: 7
Translator mutex groups: 1
Translator total mutex groups size: 64
Translator operators: 15078
Translator axioms: 0
Translator task size: 196129
Translator peak memory: 153968 KB
Writing output... [0.230s CPU, 0.234s wall-clock]
Done! [7.020s CPU, 8.245s wall-clock]
INFO     Run task transformation (preprocess).
INFO     Absolute path: /planner/builds/release64/bin/preprocess
INFO     callstring: /planner/builds/release64/bin/preprocess < output.sas
Building causal graph...
The causal graph is not acyclic.
163 variables of 163 necessary
1 of 1 mutex groups necessary.
15078 of 15078 operators necessary.
0 of 0 axiom rules necessary.
Initializing mutex computation...
Mutex computation initialized with 419 fluents.
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=26569, notReached=141534, spurious=7458
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=152484, notReached=15619, spurious=7458
1899 operators are spurious because were not triggered
Unreachable proposition: Atom thinsnake(pos0-3)
Unreachable proposition: Atom thinsnake(pos0-4)
Unreachable proposition: Atom thinsnake(pos1-2)
Unreachable proposition: Atom thinsnake(pos1-3)
Unreachable proposition: Atom thinsnake(pos1-4)
Unreachable proposition: Atom thinsnake(pos2-1)
Unreachable proposition: Atom thinsnake(pos2-3)
Unreachable proposition: Atom thinsnake(pos3-1)
Unreachable proposition: Atom thinsnake(pos3-3)
Unreachable proposition: Atom thinsnake(pos5-3)
Unreachable proposition: Atom thinsnake(pos5-5)
H^2 mutexes added fw: 8502, unreachable: 11
525 of 13179 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index bw
Init values regression
Initialized mvalues backward: reached=139363, notReached=13121, spurious=23077
Initialize m_ops bw
Computing mutexes...
Mutex computation finished with reached=152472, notReached=12, spurious=23077
0 operators are spurious because were not triggered
H^2 mutexes added bw: 12, unreachable: 0
0 of 12654 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=26569, notReached=125903, spurious=23089
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=152472, notReached=0, spurious=23089
0 operators are spurious because were not triggered
H^2 mutexes added fw: 0, unreachable: 0
0 of 12654 operators detected as spurious
Total mutex and disambiguation time: 4.76747 iterations: 3
4258 of 4258 mutex groups necessary.
12654 of 15078 operators necessary.
0 of 0 axiom rules necessary.
Change id of operators: 12654
Change id of mutexes
Change id of goals
Change id of initial state
Remove unreachable facts from variables: 163
4258 of 4258 mutex groups necessary.
12654 of 12654 operators necessary.
0 of 0 axiom rules necessary.
Updating causal graph and pruning unnecessary facts
163 variables of 163 of 163 necessary
The causal graph is not acyclic.
163 variables of 163 necessary
4258 of 4258 mutex groups necessary.
12654 of 12654 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor variables: 163
Preprocessor facts: 408
Preprocessor derived variables: 0
Preprocessor operators: 12654
Preprocessor mutex groups: 4258
Preprocessor task size: 175259
Writing output...
done
INFO     Running search (release64).
INFO     search input: output.sas
INFO     search arguments: ['--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
INFO     search time limit: 1783.55s
INFO     search memory limit: 8192 MB
INFO     search executable: /planner/builds/release64/bin/downward
INFO     callstring: /planner/builds/release64/bin/downward --if-unit-cost --heuristic 'hrb=RB(dag=from_coloring, extract_plan=true)' --heuristic 'hn=novelty(eval=hrb)' --heuristic 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --if-non-unit-cost --heuristic 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))' --heuristic 'hn=novelty(eval=hrb1)' --heuristic 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))' --heuristic 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))' --heuristic 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],
                            cost_type=one,reopen_closed=false),
                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],
                            reopen_closed=false),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --always --internal-plan-file sas_plan < output.sas
time limit 1783.55 -> (1784, 1785)
reading input... [t=0.00118368s]
done reading input! [t=0.131741s]
packing state variables...done! [t=0.132542s]
Variables: 163
FactPairs: 408
Bytes per state: 24
Building successor generator...done! [t=0.148822s]
peak memory difference for root successor generator creation: 2600 KB
time for root successor generation creation: 0.0162795s
done initializing global data [t=0.154859s]
Simplifying 83394 unary operators... done! [83394 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing novelty heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.193144s
Discovered 19 landmarks, of which 1 are disjunctive and 0 are conjunctive 
12 edges
Starting search: lazy(open = alt(list(tiebreaking(list(hn, hrb)), single(hrb, pref_only = true), single(hlm), single(hlm, pref_only = true)), boost = 1000), preferred = list(hrb, hlm))
Conducting lazy best first search, (real) bound = 2147483647
11 initial landmarks, 7 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 12654 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 0
Finished initializing Red-Black task core at time step [t=0.800587s]
Finished initializing Red-Black task at time step [t=0.800587s]
No black variables found -- running FF heuristic.
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=0.800587s]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
New best heuristic value for novelty(eval = hrb): 0
[g=0, 1 evaluated, 0 expanded, t=0.802734s, 70096 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 22
Initial heuristic value for novelty(eval = hrb): 0
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=1, 3 evaluated, 2 expanded, t=0.802734s, 70096 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=2, 6 evaluated, 5 expanded, t=0.81469s, 70096 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=11, 23 evaluated, 19 expanded, t=0.87486s, 70096 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=11, 27 evaluated, 21 expanded, t=0.886119s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=18, 36 evaluated, 29 expanded, t=0.919s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=21, 45 evaluated, 38 expanded, t=0.94884s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=22, 48 evaluated, 41 expanded, t=0.94884s, 70096 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=24, 55 evaluated, 47 expanded, t=0.980005s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=25, 56 evaluated, 48 expanded, t=0.980005s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=26, 57 evaluated, 49 expanded, t=0.980005s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=27, 58 evaluated, 50 expanded, t=0.980005s, 70096 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=28, 59 evaluated, 51 expanded, t=0.980005s, 70096 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=29, 60 evaluated, 52 expanded, t=0.980005s, 70096 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=58, 366030 evaluated, 332501 expanded, t=1049.68s, 125360 KB]
Solution found!
Actual search time: 1048.94s [t=1049.68s]
move-thin-snake pos6-2 pos6-1 dir-left (1)
move-thin-snake pos6-1 pos5-1 dir-up (1)
move-thin-snake-and-box pos5-1 pos4-1 pos3-1 dir-up (1)
move-thin-snake pos4-1 pos4-0 dir-left (1)
move-thin-snake pos4-0 pos3-0 dir-up (1)
move-thin-snake pos3-0 pos2-0 dir-up (1)
move-thin-snake-and-first-eat pos2-0 pos2-1 dir-right (1)
move-box-and-eat pos2-1 pos3-1 pos4-1 dir-down (1)
move-fat-snake pos3-1 pos3-0 pos2-0 pos2-1 dir-left (1)
move-fat-snake pos3-0 pos4-0 pos2-1 pos3-1 dir-down (1)
move-fat-snake-and-box pos4-0 pos5-0 pos3-1 pos3-0 pos6-0 dir-down (1)
move-fat-snake pos5-0 pos5-1 pos3-0 pos4-0 dir-right (1)
move-fat-snake pos5-1 pos6-1 pos4-0 pos5-0 dir-down (1)
move-fat-snake pos6-1 pos6-2 pos5-0 pos5-1 dir-right (1)
move-fat-snake pos6-2 pos6-3 pos5-1 pos6-1 dir-right (1)
move-and-eat pos6-3 pos5-3 dir-up (1)
move-fat-snake-and-box pos5-3 pos5-2 pos6-1 pos6-2 pos5-1 dir-left (1)
move-fat-snake-and-box pos5-2 pos5-1 pos6-2 pos6-3 pos5-0 dir-left (1)
move-fat-snake-and-box pos5-1 pos4-1 pos6-3 pos5-3 pos3-1 dir-up (1)
move-fat-snake pos4-1 pos4-0 pos5-3 pos5-2 dir-left (1)
move-fat-snake pos4-0 pos3-0 pos5-2 pos5-1 dir-up (1)
move-fat-snake pos3-0 pos2-0 pos5-1 pos4-1 dir-up (1)
move-fat-snake pos2-0 pos2-1 pos4-1 pos4-0 dir-right (1)
move-fat-snake-and-box pos2-1 pos3-1 pos4-0 pos3-0 pos4-1 dir-down (1)
move-fat-snake-and-box pos3-1 pos4-1 pos3-0 pos2-0 pos5-1 dir-down (1)
move-fat-snake pos4-1 pos4-0 pos2-0 pos2-1 dir-left (1)
move-fat-snake pos4-0 pos3-0 pos2-1 pos3-1 dir-up (1)
move-fat-snake pos3-0 pos2-0 pos3-1 pos4-1 dir-up (1)
move-fat-snake pos2-0 pos1-0 pos4-1 pos4-0 dir-up (1)
move-fat-snake pos1-0 pos0-0 pos4-0 pos3-0 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos3-0 pos2-0 dir-right (1)
move-fat-snake-and-box pos0-1 pos1-1 pos2-0 pos1-0 pos2-1 dir-down (1)
move-fat-snake-and-box pos1-1 pos2-1 pos1-0 pos0-0 pos3-1 dir-down (1)
move-fat-snake pos2-1 pos2-0 pos0-0 pos0-1 dir-left (1)
move-fat-snake pos2-0 pos1-0 pos0-1 pos1-1 dir-up (1)
move-fat-snake pos1-0 pos0-0 pos1-1 pos2-1 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos2-1 pos2-0 dir-right (1)
move-fat-snake-and-box pos0-1 pos0-2 pos2-0 pos1-0 pos0-3 dir-right (1)
move-box-and-eat pos0-2 pos0-3 pos0-4 dir-right (1)
move-fat-snake-and-box pos0-3 pos1-3 pos1-0 pos0-0 pos2-3 dir-down (1)
move-fat-snake-and-box pos1-3 pos1-2 pos0-0 pos0-1 pos1-1 dir-left (1)
move-fat-snake-and-box pos1-2 pos1-1 pos0-1 pos0-2 pos1-0 dir-left (1)
move-fat-snake pos1-1 pos2-1 pos0-2 pos0-3 dir-down (1)
move-fat-snake pos2-1 pos2-0 pos0-3 pos1-3 dir-left (1)
move-fat-snake pos2-0 pos3-0 pos1-3 pos1-2 dir-down (1)
move-fat-snake pos3-0 pos4-0 pos1-2 pos1-1 dir-down (1)
move-fat-snake pos4-0 pos4-1 pos1-1 pos2-1 dir-right (1)
move-fat-snake-and-box pos4-1 pos5-1 pos2-1 pos2-0 pos6-1 dir-down (1)
move-fat-snake pos5-1 pos5-2 pos2-0 pos3-0 dir-right (1)
move-fat-snake pos5-2 pos6-2 pos3-0 pos4-0 dir-down (1)
move-fat-snake pos6-2 pos6-3 pos4-0 pos4-1 dir-right (1)
move-fat-snake pos6-3 pos6-4 pos4-1 pos5-1 dir-right (1)
move-fat-snake pos6-4 pos6-5 pos5-1 pos5-2 dir-right (1)
move-and-eat pos6-5 pos5-5 dir-up (1)
move-fat-snake-and-box pos5-5 pos5-4 pos5-2 pos6-2 pos5-3 dir-left (1)
move-fat-snake pos5-4 pos4-4 pos6-2 pos6-3 dir-up (1)
move-fat-snake pos4-4 pos3-4 pos6-3 pos6-4 dir-up (1)
move-and-eat pos3-4 pos3-3 dir-left (1)
move-box-and-eat pos3-3 pos2-3 pos1-3 dir-up (1)
Plan length: 59 step(s).
Plan cost: 59
Expanded 332502 state(s).
Reopened 0 state(s).
Evaluated 366031 state(s).
Evaluations: 698534
Generated 535890 state(s).
Dead ends: 33528 state(s).
Number of registered states: 366031
Best solution cost so far: 59
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 5)
Conducting lazy best first search, (real) bound = 59
11 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=0, 1 evaluated, 0 expanded, t=1049.8s, 125360 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 22
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=1, 3 evaluated, 2 expanded, t=1049.81s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=2, 6 evaluated, 5 expanded, t=1049.81s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=11, 19 evaluated, 17 expanded, t=1049.85s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=11, 24 evaluated, 20 expanded, t=1049.87s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=18, 31 evaluated, 27 expanded, t=1049.9s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=21, 36 evaluated, 32 expanded, t=1049.91s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=23, 40 evaluated, 36 expanded, t=1049.93s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=24, 42 evaluated, 38 expanded, t=1049.94s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=13, 56 evaluated, 50 expanded, t=1049.97s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=23, 585 evaluated, 511 expanded, 8 reopened, t=1051.47s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 1396 evaluated, 1213 expanded, 18 reopened, t=1053.88s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 1397 evaluated, 1214 expanded, 18 reopened, t=1053.88s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 1398 evaluated, 1215 expanded, 18 reopened, t=1053.88s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 1399 evaluated, 1216 expanded, 18 reopened, t=1053.88s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=29, 15441 evaluated, 13938 expanded, 371 reopened, t=1096.44s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=52, 113923 evaluated, 101461 expanded, 8700 reopened, t=1361.99s, 125360 KB]
Solution found!
Actual search time: 312.195s [t=1361.99s]
move-thin-snake pos6-2 pos6-1 dir-left (1)
move-thin-snake pos6-1 pos5-1 dir-up (1)
move-thin-snake-and-box pos5-1 pos4-1 pos3-1 dir-up (1)
move-thin-snake pos4-1 pos4-0 dir-left (1)
move-thin-snake-and-box pos4-0 pos5-0 pos6-0 dir-down (1)
move-thin-snake pos5-0 pos5-1 dir-right (1)
move-thin-snake pos5-1 pos6-1 dir-down (1)
move-thin-snake pos6-1 pos6-2 dir-right (1)
move-thin-snake pos6-2 pos6-3 dir-right (1)
move-thin-snake-and-first-eat pos6-3 pos5-3 dir-up (1)
move-fat-snake-and-box pos5-3 pos5-2 pos6-3 pos5-3 pos5-1 dir-left (1)
move-fat-snake-and-box pos5-2 pos5-1 pos5-3 pos5-2 pos5-0 dir-left (1)
move-fat-snake pos5-1 pos4-1 pos5-2 pos5-1 dir-up (1)
move-fat-snake pos4-1 pos4-0 pos5-1 pos4-1 dir-left (1)
move-fat-snake pos4-0 pos3-0 pos4-1 pos4-0 dir-up (1)
move-fat-snake pos3-0 pos2-0 pos4-0 pos3-0 dir-up (1)
move-and-eat pos2-0 pos2-1 dir-right (1)
move-box-and-eat pos2-1 pos3-1 pos4-1 dir-down (1)
move-fat-snake-and-box pos3-1 pos4-1 pos3-0 pos2-0 pos5-1 dir-down (1)
move-fat-snake pos4-1 pos4-0 pos2-0 pos2-1 dir-left (1)
move-fat-snake pos4-0 pos3-0 pos2-1 pos3-1 dir-up (1)
move-fat-snake pos3-0 pos2-0 pos3-1 pos4-1 dir-up (1)
move-fat-snake pos2-0 pos1-0 pos4-1 pos4-0 dir-up (1)
move-fat-snake pos1-0 pos0-0 pos4-0 pos3-0 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos3-0 pos2-0 dir-right (1)
move-fat-snake-and-box pos0-1 pos1-1 pos2-0 pos1-0 pos2-1 dir-down (1)
move-fat-snake-and-box pos1-1 pos2-1 pos1-0 pos0-0 pos3-1 dir-down (1)
move-fat-snake pos2-1 pos2-0 pos0-0 pos0-1 dir-left (1)
move-fat-snake pos2-0 pos1-0 pos0-1 pos1-1 dir-up (1)
move-fat-snake pos1-0 pos0-0 pos1-1 pos2-1 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos2-1 pos2-0 dir-right (1)
move-fat-snake-and-box pos0-1 pos0-2 pos2-0 pos1-0 pos0-3 dir-right (1)
move-box-and-eat pos0-2 pos0-3 pos0-4 dir-right (1)
move-fat-snake-and-box pos0-3 pos1-3 pos1-0 pos0-0 pos2-3 dir-down (1)
move-fat-snake-and-box pos1-3 pos1-2 pos0-0 pos0-1 pos1-1 dir-left (1)
move-fat-snake-and-box pos1-2 pos1-1 pos0-1 pos0-2 pos1-0 dir-left (1)
move-fat-snake pos1-1 pos2-1 pos0-2 pos0-3 dir-down (1)
move-fat-snake pos2-1 pos2-0 pos0-3 pos1-3 dir-left (1)
move-fat-snake pos2-0 pos3-0 pos1-3 pos1-2 dir-down (1)
move-fat-snake pos3-0 pos4-0 pos1-2 pos1-1 dir-down (1)
move-fat-snake pos4-0 pos4-1 pos1-1 pos2-1 dir-right (1)
move-fat-snake-and-box pos4-1 pos5-1 pos2-1 pos2-0 pos6-1 dir-down (1)
move-fat-snake pos5-1 pos5-2 pos2-0 pos3-0 dir-right (1)
move-fat-snake pos5-2 pos6-2 pos3-0 pos4-0 dir-down (1)
move-fat-snake pos6-2 pos6-3 pos4-0 pos4-1 dir-right (1)
move-fat-snake pos6-3 pos6-4 pos4-1 pos5-1 dir-right (1)
move-fat-snake pos6-4 pos6-5 pos5-1 pos5-2 dir-right (1)
move-and-eat pos6-5 pos5-5 dir-up (1)
move-fat-snake-and-box pos5-5 pos5-4 pos5-2 pos6-2 pos5-3 dir-left (1)
move-fat-snake pos5-4 pos4-4 pos6-2 pos6-3 dir-up (1)
move-fat-snake pos4-4 pos3-4 pos6-3 pos6-4 dir-up (1)
move-and-eat pos3-4 pos3-3 dir-left (1)
move-box-and-eat pos3-3 pos2-3 pos1-3 dir-up (1)
Plan length: 53 step(s).
Plan cost: 53
Expanded 101462 state(s).
Reopened 8700 state(s).
Evaluated 113924 state(s).
Evaluations: 206687
Generated 170771 state(s).
Dead ends: 12461 state(s).
Number of registered states: 105224
Best solution cost so far: 53
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 3)
Conducting lazy best first search, (real) bound = 53
11 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=0, 1 evaluated, 0 expanded, t=1362.02s, 125360 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 22
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=1, 3 evaluated, 2 expanded, t=1362.03s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=2, 6 evaluated, 5 expanded, t=1362.04s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=8, 23 evaluated, 20 expanded, t=1362.09s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=11, 76 evaluated, 65 expanded, t=1362.24s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=18, 88 evaluated, 77 expanded, t=1362.28s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=21, 93 evaluated, 82 expanded, t=1362.28s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=12, 101 evaluated, 90 expanded, t=1362.3s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=13, 102 evaluated, 91 expanded, t=1362.3s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=27, 505 evaluated, 444 expanded, 2 reopened, t=1363.4s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=29, 3098 evaluated, 2761 expanded, 28 reopened, t=1371.16s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 3166 evaluated, 2823 expanded, 28 reopened, t=1371.35s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 3167 evaluated, 2824 expanded, 28 reopened, t=1371.35s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 3169 evaluated, 2826 expanded, 28 reopened, t=1371.35s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 3171 evaluated, 2828 expanded, 28 reopened, t=1371.37s, 125360 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=31, 14761 evaluated, 13320 expanded, 109 reopened, t=1408.79s, 125360 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=52, 159193 evaluated, 142818 expanded, 7790 reopened, t=1819.69s, 125360 KB]
Completely explored state space -- no solution!
Actual search time: 1574.09s [t=2936.1s]
Expanded 514942 state(s).
Reopened 27332 state(s).
Evaluated 562793 state(s).
Evaluations: 1050403
Generated 864604 state(s).
Dead ends: 47851 state(s).
Number of registered states: 535461
Best solution cost so far: 53
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 2)
Conducting lazy best first search, (real) bound = 53
11 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=0, 1 evaluated, 0 expanded, t=2936.3s, 157956 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 22
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=1, 3 evaluated, 2 expanded, t=2936.31s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=2, 6 evaluated, 5 expanded, t=2936.31s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=8, 27 evaluated, 24 expanded, t=2936.37s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=11, 88 evaluated, 78 expanded, 1 reopened, t=2936.52s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=18, 111 evaluated, 99 expanded, 1 reopened, t=2936.58s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=21, 142 evaluated, 130 expanded, 1 reopened, t=2936.67s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=23, 147 evaluated, 135 expanded, 1 reopened, t=2936.68s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=24, 148 evaluated, 136 expanded, 1 reopened, t=2936.68s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=13, 166 evaluated, 152 expanded, 1 reopened, t=2936.73s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=27, 1076 evaluated, 954 expanded, 4 reopened, t=2939.08s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=29, 3577 evaluated, 3209 expanded, 18 reopened, t=2945.92s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 4098 evaluated, 3681 expanded, 21 reopened, t=2947.33s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 4099 evaluated, 3682 expanded, 21 reopened, t=2947.33s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 4100 evaluated, 3683 expanded, 21 reopened, t=2947.33s, 157956 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 4101 evaluated, 3684 expanded, 21 reopened, t=2947.33s, 157956 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=29, 15449 evaluated, 13965 expanded, 67 reopened, t=2981.9s, 157956 KB]
Peak memory: 157956 KB
caught signal 24 -- exiting
INFO     Running translator.
INFO     translator input: ['/home/maria/Documents/team15/problem-7-2/domain.pddl', '/home/maria/Documents/team15/problem-7-2/problem-7-2.pddl']
INFO     translator arguments: []
INFO     translator time limit: 1799.97s
INFO     translator memory limit: 8192 MB
INFO     callstring: /usr/bin/python /planner/builds/release64/bin/translate/translate.py /home/maria/Documents/team15/problem-7-2/domain.pddl /home/maria/Documents/team15/problem-7-2/problem-7-2.pddl
time limit 1799.97 -> (1800, 1800)
Parsing...
Parsing: [0.010s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 137 rules.
Computing model... [0.260s CPU, 0.267s wall-clock]
13798 relevant atoms
4190 auxiliary atoms
17988 final queue length
75912 total queue pushes
Completing instantiation... [1.450s CPU, 1.450s wall-clock]
Instantiating: [1.730s CPU, 1.738s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.020s CPU, 0.026s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
161 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.030s CPU, 0.031s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.090s CPU, 0.100s wall-clock]
Translating task: [2.010s CPU, 2.033s wall-clock]
33236 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
28 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.760s CPU, 0.765s wall-clock]
Reordering and filtering variables...
163 of 163 variables necessary.
1 of 3 mutex groups necessary.
15078 of 15078 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.350s CPU, 0.352s wall-clock]
Translator variables: 163
Translator derived variables: 0
Translator facts: 419
Translator goal facts: 7
Translator mutex groups: 1
Translator total mutex groups size: 64
Translator operators: 15078
Translator axioms: 0
Translator task size: 196129
Translator peak memory: 153964 KB
Writing output... [0.240s CPU, 0.236s wall-clock]
Done! [5.180s CPU, 5.218s wall-clock]
Error running with transform-task option, trying without
plan manager: found new plan with cost 59
plan manager: found new plan with cost 53
best cost: 53
number of previous plans: 2
['/planner/fast-downward.py', '--build', 'release64', '--plan-file', 'sas_plan', 'output.sas', '--internal-previous-portfolio-plans', '2', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=53, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=53, repeat_last=true, continue_on_fail=true)', '--always']
INFO     Running search (release64).
INFO     search input: output.sas
INFO     search arguments: ['--internal-previous-portfolio-plans', '2', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=53, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=53, repeat_last=true, continue_on_fail=true)', '--always']
INFO     search time limit: 1799.99s
INFO     search memory limit: 8192 MB
INFO     search executable: /planner/builds/release64/bin/downward
INFO     callstring: /planner/builds/release64/bin/downward --internal-previous-portfolio-plans 2 --if-unit-cost --heuristic 'hrb=RB(dag=from_coloring, extract_plan=true)' --heuristic 'hn=novelty(eval=hrb)' --heuristic 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)
                ], bound=53, repeat_last=true, continue_on_fail=true)' --if-non-unit-cost --heuristic 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))' --heuristic 'hn=novelty(eval=hrb1)' --heuristic 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))' --heuristic 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))' --heuristic 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],
                            cost_type=one,reopen_closed=false),
                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],
                            reopen_closed=false),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)
                ], bound=53, repeat_last=true, continue_on_fail=true)' --always --internal-plan-file sas_plan < output.sas
time limit 1799.99 -> (1800, 1800)
reading input... [t=0s]
done reading input! [t=0.119219s]
packing state variables...done! [t=0.1239s]
Variables: 163
FactPairs: 419
Bytes per state: 24
Building successor generator...done! [t=0.140054s]
peak memory difference for root successor generator creation: 3080 KB
time for root successor generation creation: 0.016154s
done initializing global data [t=0.140054s]
Simplifying 97044 unary operators... done! [96954 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing novelty heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.225507s
Discovered 18 landmarks, of which 0 are disjunctive and 0 are conjunctive 
11 edges
Starting search: lazy(open = alt(list(tiebreaking(list(hn, hrb)), single(hrb, pref_only = true), single(hlm), single(hlm, pref_only = true)), boost = 1000), preferred = list(hrb, hlm))
Conducting lazy best first search, (real) bound = 53
11 initial landmarks, 7 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 15078 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 0
Finished initializing Red-Black task core at time step [t=0.883516s]
Finished initializing Red-Black task at time step [t=0.883516s]
No black variables found -- running FF heuristic.
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=0.883516s]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
New best heuristic value for novelty(eval = hrb): 0
[g=0, 1 evaluated, 0 expanded, t=0.883516s, 77504 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 22
Initial heuristic value for novelty(eval = hrb): 0
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=1, 3 evaluated, 2 expanded, t=0.89038s, 77504 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=2, 6 evaluated, 5 expanded, t=0.89819s, 77504 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=10, 28 evaluated, 24 expanded, t=0.981576s, 77504 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=11, 29 evaluated, 25 expanded, t=0.993509s, 77504 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=18, 38 evaluated, 33 expanded, t=1.02859s, 77504 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=21, 45 evaluated, 40 expanded, t=1.05447s, 77504 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=22, 48 evaluated, 43 expanded, t=1.06298s, 77504 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=24, 55 evaluated, 49 expanded, t=1.0836s, 77504 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=25, 56 evaluated, 50 expanded, t=1.0836s, 77504 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=26, 57 evaluated, 51 expanded, t=1.0836s, 77504 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=27, 58 evaluated, 52 expanded, t=1.09492s, 77504 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=28, 59 evaluated, 53 expanded, t=1.09492s, 77504 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=29, 60 evaluated, 54 expanded, t=1.09492s, 77504 KB]
Completely explored state space -- no solution!
Actual search time: 1285.05s [t=1285.88s]
Expanded 308075 state(s).
Reopened 0 state(s).
Evaluated 339828 state(s).
Evaluations: 647903
Generated 519551 state(s).
Dead ends: 31753 state(s).
Number of registered states: 339828
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 5)
Conducting lazy best first search, (real) bound = 53
11 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=0, 1 evaluated, 0 expanded, t=1285.98s, 127088 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 22
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=1, 3 evaluated, 2 expanded, t=1285.99s, 127088 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=2, 6 evaluated, 5 expanded, t=1286s, 127088 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=8, 25 evaluated, 23 expanded, t=1286.08s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=13, 45 evaluated, 40 expanded, t=1286.15s, 127088 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=12, 92 evaluated, 81 expanded, t=1286.32s, 127088 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=13, 93 evaluated, 82 expanded, t=1286.32s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=23, 490 evaluated, 428 expanded, t=1287.76s, 127088 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=31, 1214 evaluated, 1064 expanded, 11 reopened, t=1290.4s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=41, 2729 evaluated, 2403 expanded, 39 reopened, t=1296.01s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=42, 2730 evaluated, 2404 expanded, 39 reopened, t=1296.01s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=43, 2731 evaluated, 2405 expanded, 39 reopened, t=1296.01s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=44, 2732 evaluated, 2406 expanded, 39 reopened, t=1296.01s, 127088 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=49, 6805 evaluated, 6147 expanded, 149 reopened, t=1310.92s, 127088 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=52, 183494 evaluated, 164431 expanded, 11862 reopened, t=1900.18s, 127088 KB]
