['/planner/fast-downward.py', '--build', 'release64', '--plan-file', 'sas_plan', '--transform-task', 'preprocess', '/home/maria/Documents/team15/problem-1-1/domain.pddl', '/home/maria/Documents/team15/problem-1-1/problem-1-1.pddl', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
Deleting existing plans
INFO     Running translator.
INFO     translator input: ['/home/maria/Documents/team15/problem-1-1/domain.pddl', '/home/maria/Documents/team15/problem-1-1/problem-1-1.pddl']
INFO     translator arguments: []
INFO     translator time limit: 1799.92s
INFO     translator memory limit: 8192 MB
INFO     callstring: /usr/bin/python /planner/builds/release64/bin/translate/translate.py /home/maria/Documents/team15/problem-1-1/domain.pddl /home/maria/Documents/team15/problem-1-1/problem-1-1.pddl
time limit 1799.92 -> (1800, 1800)
Parsing...
Parsing: [0.010s CPU, 0.042s wall-clock]
Normalizing task... [0.010s CPU, 0.009s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.010s CPU, 0.029s wall-clock]
Preparing model... [0.010s CPU, 0.007s wall-clock]
Generated 137 rules.
Computing model... [0.060s CPU, 0.080s wall-clock]
1242 relevant atoms
1137 auxiliary atoms
2379 final queue length
6598 total queue pushes
Completing instantiation... [0.120s CPU, 0.133s wall-clock]
Instantiating: [0.200s CPU, 0.251s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.010s CPU, 0.020s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
55 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.023s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.018s wall-clock]
Translating task: [0.150s CPU, 0.191s wall-clock]
2011 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.064s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
0 of 3 mutex groups necessary.
1077 of 1077 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.029s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 136
Translator goal facts: 9
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1077
Translator axioms: 0
Translator task size: 12493
Translator peak memory: 33728 KB
Writing output... [0.020s CPU, 0.020s wall-clock]
Done! [0.500s CPU, 0.635s wall-clock]
INFO     Run task transformation (preprocess).
INFO     Absolute path: /planner/builds/release64/bin/preprocess
INFO     callstring: /planner/builds/release64/bin/preprocess < output.sas
Building causal graph...
The causal graph is not acyclic.
57 variables of 57 necessary
0 of 0 mutex groups necessary.
1077 of 1077 operators necessary.
0 of 0 axiom rules necessary.
Initializing mutex computation...
Mutex computation initialized with 136 fluents.
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=3249, notReached=14825, spurious=422
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=14792, notReached=3282, spurious=422
865 operators are spurious because were not triggered
Unreachable proposition: Atom nextsnake(pos1-1, pos0-1)
Unreachable proposition: Atom nextsnake(pos1-1, pos1-0)
Unreachable proposition: Atom nextsnake(pos1-1, pos2-1)
Unreachable proposition: Atom tailsnake(pos0-0)
Unreachable proposition: Atom tailsnake(pos0-1)
Unreachable proposition: Atom tailsnake(pos1-0)
Unreachable proposition: Atom tailsnake(pos2-0)
Unreachable proposition: Atom tailsnake(pos2-1)
H^2 mutexes added fw: 1276, unreachable: 8
0 of 212 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index bw
Init values regression
Initialized mvalues backward: reached=9851, notReached=4941, spurious=3704
Initialize m_ops bw
Computing mutexes...
Mutex computation finished with reached=14514, notReached=278, spurious=3704
8 operators are spurious because were not triggered
H^2 mutexes added bw: 278, unreachable: 0
0 of 204 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=3249, notReached=11265, spurious=3982
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=14478, notReached=36, spurious=3982
0 operators are spurious because were not triggered
H^2 mutexes added fw: 36, unreachable: 0
0 of 204 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index bw
Init values regression
Initialized mvalues backward: reached=9660, notReached=4818, spurious=4018
Initialize m_ops bw
Computing mutexes...
Mutex computation finished with reached=14307, notReached=171, spurious=4018
1 operators are spurious because were not triggered
Unreachable proposition: Atom nextsnake(pos1-0, pos1-1)
H^2 mutexes added bw: 0, unreachable: 1
0 of 203 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=3249, notReached=11058, spurious=4189
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=14307, notReached=0, spurious=4189
0 operators are spurious because were not triggered
H^2 mutexes added fw: 0, unreachable: 0
0 of 203 operators detected as spurious
Total mutex and disambiguation time: 0.092619 iterations: 5
754 of 795 mutex groups necessary.
203 of 1077 operators necessary.
0 of 0 axiom rules necessary.
Change id of operators: 203
Change id of mutexes
Change id of goals
Change id of initial state
Remove unreachable facts from variables: 57
754 of 754 mutex groups necessary.
203 of 203 operators necessary.
0 of 0 axiom rules necessary.
Updating causal graph and pruning unnecessary facts
53 variables of 57 of 57 necessary
The causal graph is not acyclic.
42 variables of 53 necessary
471 of 754 mutex groups necessary.
203 of 203 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor variables: 42
Preprocessor facts: 101
Preprocessor derived variables: 0
Preprocessor operators: 203
Preprocessor mutex groups: 471
Preprocessor task size: 3333
Writing output...
done
INFO     Running search (release64).
INFO     search input: output.sas
INFO     search arguments: ['--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
INFO     search time limit: 1799.1s
INFO     search memory limit: 8192 MB
INFO     search executable: /planner/builds/release64/bin/downward
INFO     callstring: /planner/builds/release64/bin/downward --if-unit-cost --heuristic 'hrb=RB(dag=from_coloring, extract_plan=true)' --heuristic 'hn=novelty(eval=hrb)' --heuristic 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --if-non-unit-cost --heuristic 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))' --heuristic 'hn=novelty(eval=hrb1)' --heuristic 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))' --heuristic 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))' --heuristic 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],
                            cost_type=one,reopen_closed=false),
                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],
                            reopen_closed=false),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --always --internal-plan-file sas_plan < output.sas
time limit 1799.10 -> (1800, 1800)
reading input... [t=0.00408946s]
done reading input! [t=0.00468096s]
packing state variables...done! [t=0.00468096s]
Variables: 42
FactPairs: 101
Bytes per state: 8
Building successor generator...done! [t=0.00468096s]
peak memory difference for root successor generator creation: 0 KB
time for root successor generation creation: 0s
done initializing global data [t=0.00468096s]
Simplifying 1142 unary operators... done! [1142 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing novelty heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0055602s
Discovered 33 landmarks, of which 4 are disjunctive and 0 are conjunctive 
93 edges
Starting search: lazy(open = alt(list(tiebreaking(list(hn, hrb)), single(hrb, pref_only = true), single(hlm), single(hlm, pref_only = true)), boost = 1000), preferred = list(hrb, hlm))
Conducting lazy best first search, (real) bound = 2147483647
19 initial landmarks, 9 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 203 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 0
Finished initializing Red-Black task core at time step [t=0.0218526s]
Finished initializing Red-Black task at time step [t=0.0218526s]
No black variables found -- running FF heuristic.
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=0.0218526s]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for novelty(eval = hrb): 0
[g=0, 1 evaluated, 0 expanded, t=0.0218526s, 5828 KB]
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
Initial heuristic value for novelty(eval = hrb): 0
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
[g=1, 4 evaluated, 1 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=2, 5 evaluated, 2 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=3, 6 evaluated, 3 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=4, 7 evaluated, 4 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=6, 9 evaluated, 6 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=6, 22 evaluated, 17 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=7, 23 evaluated, 18 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 24 evaluated, 19 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 25 evaluated, 20 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=10, 26 evaluated, 21 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=11, 28 evaluated, 23 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=12, 29 evaluated, 24 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=13, 30 evaluated, 25 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=14, 31 evaluated, 26 expanded, t=0.0218526s, 5828 KB]
Solution found!
Actual search time: 0s [t=0.0218526s]
move-and-eat pos1-1 pos1-2 dir-right (1)
move-and-eat pos1-2 pos1-3 dir-right (1)
move-fat-snake pos1-3 pos0-3 pos1-1 pos1-2 dir-up (1)
move-and-eat pos0-3 pos0-4 dir-right (1)
move-fat-snake pos0-4 pos1-4 pos1-2 pos1-3 dir-down (1)
move-and-eat pos1-4 pos2-4 dir-down (1)
move-fat-snake pos2-4 pos2-3 pos1-3 pos0-3 dir-left (1)
move-fat-snake pos2-3 pos1-3 pos0-3 pos0-4 dir-up (1)
move-fat-snake pos1-3 pos1-2 pos0-4 pos1-4 dir-left (1)
move-fat-snake pos1-2 pos1-1 pos1-4 pos2-4 dir-left (1)
move-and-eat pos1-1 pos0-1 dir-up (1)
move-and-eat pos0-1 pos0-0 dir-left (1)
move-and-eat pos0-0 pos1-0 dir-down (1)
move-and-eat pos1-0 pos2-0 dir-down (1)
move-and-eat pos2-0 pos2-1 dir-right (1)
Plan length: 15 step(s).
Plan cost: 15
Expanded 27 state(s).
Reopened 0 state(s).
Evaluated 32 state(s).
Evaluations: 60
Generated 38 state(s).
Dead ends: 4 state(s).
Number of registered states: 32
Best solution cost so far: 15
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 5)
Conducting lazy best first search, (real) bound = 15
19 initial landmarks, 9 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=0.0218526s, 5828 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
[g=1, 4 evaluated, 1 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=2, 5 evaluated, 2 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=3, 6 evaluated, 3 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=4, 7 evaluated, 4 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=5, 8 evaluated, 5 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=6, 9 evaluated, 6 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=7, 10 evaluated, 7 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 11 evaluated, 8 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 12 evaluated, 9 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=10, 13 evaluated, 10 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=11, 14 evaluated, 11 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=12, 15 evaluated, 12 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=13, 16 evaluated, 13 expanded, t=0.0218526s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=14, 17 evaluated, 14 expanded, t=0.0218526s, 5828 KB]
Completely explored state space -- no solution!
Actual search time: 0.00799911s [t=0.0298517s]
Expanded 55 state(s).
Reopened 0 state(s).
Evaluated 63 state(s).
Evaluations: 118
Generated 68 state(s).
Dead ends: 8 state(s).
Number of registered states: 63
Best solution cost so far: 15
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 3)
Conducting lazy best first search, (real) bound = 15
19 initial landmarks, 9 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=0.0298517s, 5828 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
[g=1, 4 evaluated, 1 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=2, 5 evaluated, 2 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=3, 6 evaluated, 3 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=4, 7 evaluated, 4 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=5, 8 evaluated, 5 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=6, 9 evaluated, 6 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=7, 10 evaluated, 7 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 11 evaluated, 8 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 12 evaluated, 9 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=10, 13 evaluated, 10 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=11, 14 evaluated, 11 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=12, 15 evaluated, 12 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=13, 16 evaluated, 13 expanded, t=0.0298517s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=14, 17 evaluated, 14 expanded, t=0.0298517s, 5828 KB]
Completely explored state space -- no solution!
Actual search time: 0.00269205s [t=0.0325437s]
Expanded 55 state(s).
Reopened 0 state(s).
Evaluated 63 state(s).
Evaluations: 118
Generated 68 state(s).
Dead ends: 8 state(s).
Number of registered states: 63
Best solution cost so far: 15
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 2)
Conducting lazy best first search, (real) bound = 15
19 initial landmarks, 9 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=0.0325437s, 5828 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
[g=1, 4 evaluated, 1 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=2, 5 evaluated, 2 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=3, 6 evaluated, 3 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=4, 7 evaluated, 4 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=5, 8 evaluated, 5 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=6, 9 evaluated, 6 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=7, 10 evaluated, 7 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 11 evaluated, 8 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 12 evaluated, 9 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=10, 13 evaluated, 10 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=11, 15 evaluated, 12 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=12, 16 evaluated, 13 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=13, 17 evaluated, 14 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=14, 18 evaluated, 15 expanded, t=0.0325437s, 5828 KB]
Completely explored state space -- no solution!
Actual search time: 0s [t=0.0325437s]
Expanded 55 state(s).
Reopened 0 state(s).
Evaluated 63 state(s).
Evaluations: 118
Generated 68 state(s).
Dead ends: 8 state(s).
Number of registered states: 63
Best solution cost so far: 15
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 15
19 initial landmarks, 9 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=0.0325437s, 5828 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
[g=1, 4 evaluated, 1 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=2, 5 evaluated, 2 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=3, 6 evaluated, 3 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=4, 9 evaluated, 6 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=5, 10 evaluated, 7 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=6, 12 evaluated, 9 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=7, 14 evaluated, 11 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 15 evaluated, 12 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 17 evaluated, 13 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=10, 18 evaluated, 14 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=11, 19 evaluated, 15 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=12, 22 evaluated, 17 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=13, 26 evaluated, 21 expanded, t=0.0325437s, 5828 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=14, 31 evaluated, 26 expanded, t=0.0325437s, 5828 KB]
Completely explored state space -- no solution!
Actual search time: 0s [t=0.0325437s]
Expanded 55 state(s).
Reopened 0 state(s).
Evaluated 63 state(s).
Evaluations: 118
Generated 68 state(s).
Dead ends: 8 state(s).
Number of registered states: 63
Best solution cost so far: 15
No solution found - keep searching
Actual search time: 0.0106912s [t=0.0325437s]
Cumulative statistics:
Expanded 247 state(s).
Reopened 0 state(s).
Evaluated 284 state(s).
Evaluations: 532
Generated 310 state(s).
Dead ends: 0 state(s).
Search time: 0.0106912s
Total time: 0.0325437s
Solution found.
Peak memory: 5828 KB
