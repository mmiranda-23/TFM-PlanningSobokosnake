['/planner/fast-downward.py', '--build', 'release64', '--plan-file', 'sas_plan', '--transform-task', 'preprocess', '/home/maria/Documents/team15/problem-6-4/domain.pddl', '/home/maria/Documents/team15/problem-6-4/problem-6-4.pddl', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
Deleting existing plans
INFO     Running translator.
INFO     translator input: ['/home/maria/Documents/team15/problem-6-4/domain.pddl', '/home/maria/Documents/team15/problem-6-4/problem-6-4.pddl']
INFO     translator arguments: []
INFO     translator time limit: 1799.95s
INFO     translator memory limit: 8192 MB
INFO     callstring: /usr/bin/python /planner/builds/release64/bin/translate/translate.py /home/maria/Documents/team15/problem-6-4/domain.pddl /home/maria/Documents/team15/problem-6-4/problem-6-4.pddl
time limit 1799.95 -> (1800, 1800)
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.008s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 137 rules.
Computing model... [0.170s CPU, 0.168s wall-clock]
8341 relevant atoms
3674 auxiliary atoms
12015 final queue length
43183 total queue pushes
Completing instantiation... [0.630s CPU, 0.657s wall-clock]
Instantiating: [0.810s CPU, 0.841s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.040s CPU, 0.024s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
136 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.028s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.044s wall-clock]
Translating task: [1.210s CPU, 1.368s wall-clock]
17584 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
34 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.470s CPU, 0.936s wall-clock]
Reordering and filtering variables...
138 of 138 variables necessary.
2 of 5 mutex groups necessary.
10144 of 10144 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.190s CPU, 0.558s wall-clock]
Translator variables: 138
Translator derived variables: 0
Translator facts: 375
Translator goal facts: 14
Translator mutex groups: 2
Translator total mutex groups size: 136
Translator operators: 10144
Translator axioms: 0
Translator task size: 109783
Translator peak memory: 99984 KB
Writing output... [0.130s CPU, 0.132s wall-clock]
Done! [2.890s CPU, 3.904s wall-clock]
INFO     Run task transformation (preprocess).
INFO     Absolute path: /planner/builds/release64/bin/preprocess
INFO     callstring: /planner/builds/release64/bin/preprocess < output.sas
Building causal graph...
The causal graph is not acyclic.
138 variables of 138 necessary
2 of 2 mutex groups necessary.
10144 of 10144 operators necessary.
0 of 0 axiom rules necessary.
Initializing mutex computation...
Mutex computation initialized with 375 fluents.
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=19044, notReached=113251, spurious=8330
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=113945, notReached=18350, spurious=8330
2756 operators are spurious because were not triggered
Unreachable proposition: Atom thinsnake(pos0-0)
Unreachable proposition: Atom thinsnake(pos0-1)
Unreachable proposition: Atom thinsnake(pos0-2)
Unreachable proposition: Atom thinsnake(pos1-0)
Unreachable proposition: Atom thinsnake(pos1-1)
Unreachable proposition: Atom thinsnake(pos2-0)
Unreachable proposition: Atom thinsnake(pos2-1)
Unreachable proposition: Atom thinsnake(pos2-2)
Unreachable proposition: Atom thinsnake(pos3-0)
Unreachable proposition: Atom thinsnake(pos3-1)
Unreachable proposition: Atom thinsnake(pos3-4)
Unreachable proposition: Atom thinsnake(pos3-5)
Unreachable proposition: Atom thinsnake(pos4-3)
Unreachable proposition: Atom thinsnake(pos4-4)
Unreachable proposition: Atom thinsnake(pos4-5)
Unreachable proposition: Atom thinsnake(pos5-2)
Unreachable proposition: Atom thinsnake(pos5-3)
Unreachable proposition: Atom thinsnake(pos5-4)
Unreachable proposition: Atom thinsnake(pos6-2)
Unreachable proposition: Atom thinsnake(pos6-3)
Unreachable proposition: Atom thinsnake(pos6-4)
Unreachable proposition: Atom thinsnake(pos6-5)
H^2 mutexes added fw: 6316, unreachable: 22
402 of 7388 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index bw
Init values regression
Initialized mvalues backward: reached=101272, notReached=12673, spurious=26680
Initialize m_ops bw
Computing mutexes...
Mutex computation finished with reached=113945, notReached=0, spurious=26680
0 operators are spurious because were not triggered
H^2 mutexes added bw: 0, unreachable: 0
0 of 6986 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=19044, notReached=94901, spurious=26680
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=113945, notReached=0, spurious=26680
0 operators are spurious because were not triggered
H^2 mutexes added fw: 0, unreachable: 0
0 of 6986 operators detected as spurious
Total mutex and disambiguation time: 2.80507 iterations: 3
3160 of 3160 mutex groups necessary.
6986 of 10144 operators necessary.
0 of 0 axiom rules necessary.
Change id of operators: 6986
Change id of mutexes
Change id of goals
Change id of initial state
Remove unreachable facts from variables: 138
3160 of 3160 mutex groups necessary.
6986 of 6986 operators necessary.
0 of 0 axiom rules necessary.
Updating causal graph and pruning unnecessary facts
138 variables of 138 of 138 necessary
The causal graph is not acyclic.
138 variables of 138 necessary
3160 of 3160 mutex groups necessary.
6986 of 6986 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor variables: 138
Preprocessor facts: 353
Preprocessor derived variables: 0
Preprocessor operators: 6986
Preprocessor mutex groups: 3160
Preprocessor task size: 83726
Writing output...
done
INFO     Running search (release64).
INFO     search input: output.sas
INFO     search arguments: ['--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
INFO     search time limit: 1792.5s
INFO     search memory limit: 8192 MB
INFO     search executable: /planner/builds/release64/bin/downward
INFO     callstring: /planner/builds/release64/bin/downward --if-unit-cost --heuristic 'hrb=RB(dag=from_coloring, extract_plan=true)' --heuristic 'hn=novelty(eval=hrb)' --heuristic 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --if-non-unit-cost --heuristic 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))' --heuristic 'hn=novelty(eval=hrb1)' --heuristic 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))' --heuristic 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))' --heuristic 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],
                            cost_type=one,reopen_closed=false),
                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],
                            reopen_closed=false),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --always --internal-plan-file sas_plan < output.sas
time limit 1792.50 -> (1793, 1794)
reading input... [t=0.000910925s]
done reading input! [t=0.0523114s]
packing state variables...done! [t=0.0613545s]
Variables: 138
FactPairs: 353
Bytes per state: 20
Building successor generator...done! [t=0.0636907s]
peak memory difference for root successor generator creation: 1520 KB
time for root successor generation creation: 0.00233615s
done initializing global data [t=0.0683842s]
Simplifying 39668 unary operators... done! [39668 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing novelty heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.154851s
Discovered 48 landmarks, of which 6 are disjunctive and 0 are conjunctive 
34 edges
Starting search: lazy(open = alt(list(tiebreaking(list(hn, hrb)), single(hrb, pref_only = true), single(hlm), single(hlm, pref_only = true)), boost = 1000), preferred = list(hrb, hlm))
Conducting lazy best first search, (real) bound = 2147483647
28 initial landmarks, 14 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 6986 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 0
Finished initializing Red-Black task core at time step [t=0.441332s]
Finished initializing Red-Black task at time step [t=0.441332s]
No black variables found -- running FF heuristic.
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=0.441332s]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for novelty(eval = hrb): 0
[g=0, 1 evaluated, 0 expanded, t=0.441332s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
Initial heuristic value for novelty(eval = hrb): 0
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 29
[g=6, 12 evaluated, 11 expanded, t=0.441332s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=7, 13 evaluated, 12 expanded, t=0.441332s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=8, 14 evaluated, 13 expanded, t=0.453081s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=9, 15 evaluated, 14 expanded, t=0.453081s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=11, 18 evaluated, 17 expanded, t=0.453081s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=12, 19 evaluated, 18 expanded, t=0.453081s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 24
[g=13, 20 evaluated, 19 expanded, t=0.453081s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=14, 21 evaluated, 20 expanded, t=0.453081s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=15, 22 evaluated, 21 expanded, t=0.453081s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=16, 25 evaluated, 24 expanded, t=0.453081s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 21
[g=23, 50 evaluated, 46 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=24, 52 evaluated, 48 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=25, 53 evaluated, 49 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=26, 54 evaluated, 50 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=27, 56 evaluated, 52 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=28, 57 evaluated, 53 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 15
[g=29, 59 evaluated, 55 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=30, 61 evaluated, 57 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=31, 62 evaluated, 58 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=32, 63 evaluated, 59 expanded, t=0.474407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=33, 64 evaluated, 60 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
[g=35, 67 evaluated, 63 expanded, t=0.48437s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=36, 68 evaluated, 64 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=37, 69 evaluated, 65 expanded, t=0.48437s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=38, 70 evaluated, 66 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=38, 72 evaluated, 68 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=39, 74 evaluated, 70 expanded, t=0.48437s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=40, 75 evaluated, 71 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=41, 76 evaluated, 72 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=42, 77 evaluated, 73 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=43, 78 evaluated, 74 expanded, t=0.48437s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=44, 79 evaluated, 75 expanded, t=0.48437s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=43, 174 evaluated, 149 expanded, t=0.524187s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=44, 175 evaluated, 150 expanded, t=0.524187s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=49, 457 evaluated, 377 expanded, t=0.676798s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=64, 14564 evaluated, 11556 expanded, t=9.08889s, 35756 KB]
Solution found!
Actual search time: 8.66591s [t=9.08889s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos4-5 dir-up (1)
move-fat-snake pos4-5 pos4-4 pos5-5 pos4-5 dir-left (1)
move-and-eat pos4-4 pos4-3 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos4-5 pos4-4 dir-down (1)
move-and-eat pos5-3 pos5-4 dir-right (1)
move-fat-snake pos5-4 pos5-5 pos4-4 pos4-3 dir-right (1)
move-fat-snake pos5-5 pos5-6 pos4-3 pos5-3 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos5-3 pos5-4 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos5-4 pos5-5 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos4-7 pos3-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-6 pos1-5 dir-left (1)
move-and-eat pos1-2 pos0-2 dir-up (1)
move-fat-snake pos0-2 pos0-1 pos1-5 pos1-4 dir-left (1)
move-and-eat pos0-1 pos0-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos1-4 pos1-3 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos1-3 pos1-2 dir-down (1)
move-and-eat pos2-0 pos3-0 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos1-2 pos0-2 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos0-2 pos0-1 dir-up (1)
move-and-eat pos2-1 pos2-2 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos0-1 pos0-0 dir-up (1)
move-and-eat pos1-2 pos1-1 dir-left (1)
move-fat-snake pos1-1 pos0-1 pos0-0 pos1-0 dir-up (1)
move-fat-snake pos0-1 pos0-0 pos1-0 pos2-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos2-0 pos3-0 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos3-0 pos3-1 dir-down (1)
move-fat-snake pos2-0 pos3-0 pos3-1 pos2-1 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos2-1 pos2-2 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos2-2 pos1-2 dir-up (1)
move-fat-snake pos2-1 pos2-2 pos1-2 pos1-1 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos1-1 pos0-1 dir-up (1)
move-fat-snake pos1-2 pos1-3 pos0-1 pos0-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos0-0 pos1-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos1-0 pos2-0 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos2-0 pos3-0 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos3-0 pos3-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos3-1 pos2-1 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos2-1 pos2-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos2-2 pos1-2 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-3 pos1-4 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-4 pos1-5 dir-left (1)
move-fat-snake pos5-5 pos4-5 pos1-5 pos1-6 dir-up (1)
move-and-eat pos4-5 pos3-5 dir-up (1)
move-and-eat pos3-5 pos3-4 dir-left (1)
move-fat-snake pos3-4 pos4-4 pos1-6 pos1-7 dir-down (1)
move-fat-snake pos4-4 pos4-3 pos1-7 pos2-7 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos2-7 pos3-7 dir-down (1)
move-and-eat pos5-3 pos5-2 dir-left (1)
move-and-eat pos5-2 pos6-2 dir-down (1)
move-and-eat pos6-2 pos6-3 dir-right (1)
move-fat-snake pos6-3 pos6-4 pos3-7 pos4-7 dir-right (1)
move-and-eat pos6-4 pos6-5 dir-right (1)
Plan length: 65 step(s).
Plan cost: 65
Expanded 11557 state(s).
Reopened 0 state(s).
Evaluated 14565 state(s).
Evaluations: 26123
Generated 16362 state(s).
Dead ends: 3007 state(s).
Number of registered states: 14565
Best solution cost so far: 65
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 5)
Conducting lazy best first search, (real) bound = 65
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=9.09314s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=9.09314s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=9.09823s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=8, 14 evaluated, 13 expanded, t=9.09823s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=9, 17 evaluated, 16 expanded, t=9.09823s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=10, 23 evaluated, 22 expanded, t=9.10771s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=11, 25 evaluated, 24 expanded, t=9.10771s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=12, 26 evaluated, 25 expanded, t=9.10771s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=13, 27 evaluated, 26 expanded, t=9.10771s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
[g=16, 34 evaluated, 33 expanded, t=9.11953s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=17, 36 evaluated, 35 expanded, t=9.11953s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 24
[g=18, 37 evaluated, 36 expanded, t=9.11953s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=20, 39 evaluated, 38 expanded, t=9.11953s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=21, 40 evaluated, 39 expanded, t=9.11953s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=23, 42 evaluated, 41 expanded, t=9.11953s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=24, 43 evaluated, 42 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=25, 44 evaluated, 43 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=26, 45 evaluated, 44 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=28, 48 evaluated, 47 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=31, 53 evaluated, 52 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=32, 54 evaluated, 53 expanded, t=9.12791s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=33, 56 evaluated, 55 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=34, 58 evaluated, 57 expanded, t=9.12791s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=35, 59 evaluated, 58 expanded, t=9.12791s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=36, 60 evaluated, 59 expanded, t=9.13885s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=36, 62 evaluated, 61 expanded, t=9.13885s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=37, 64 evaluated, 63 expanded, t=9.13885s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=38, 65 evaluated, 64 expanded, t=9.13885s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=39, 66 evaluated, 65 expanded, t=9.13885s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=40, 67 evaluated, 66 expanded, t=9.13885s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=41, 68 evaluated, 67 expanded, t=9.13885s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=42, 69 evaluated, 68 expanded, t=9.13885s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=41, 116 evaluated, 103 expanded, t=9.15731s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=42, 117 evaluated, 104 expanded, t=9.15731s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=49, 1648 evaluated, 1387 expanded, 66 reopened, t=9.95219s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=64, 9237 evaluated, 7432 expanded, 258 reopened, t=14.7925s, 35756 KB]
Solution found!
Actual search time: 5.69936s [t=14.7925s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos4-5 dir-up (1)
move-fat-snake pos4-5 pos4-4 pos5-5 pos4-5 dir-left (1)
move-and-eat pos4-4 pos4-3 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos4-5 pos4-4 dir-down (1)
move-and-eat pos5-3 pos5-4 dir-right (1)
move-fat-snake pos5-4 pos5-5 pos4-4 pos4-3 dir-right (1)
move-fat-snake pos5-5 pos5-6 pos4-3 pos5-3 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos5-3 pos5-4 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos5-4 pos5-5 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos4-7 pos3-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-6 pos1-5 dir-left (1)
move-and-eat pos1-2 pos0-2 dir-up (1)
move-fat-snake pos0-2 pos0-1 pos1-5 pos1-4 dir-left (1)
move-and-eat pos0-1 pos0-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos1-4 pos1-3 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos1-3 pos1-2 dir-down (1)
move-and-eat pos2-0 pos3-0 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos1-2 pos0-2 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos0-2 pos0-1 dir-up (1)
move-and-eat pos2-1 pos2-2 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos0-1 pos0-0 dir-up (1)
move-and-eat pos1-2 pos1-1 dir-left (1)
move-fat-snake pos1-1 pos0-1 pos0-0 pos1-0 dir-up (1)
move-fat-snake pos0-1 pos0-0 pos1-0 pos2-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos2-0 pos3-0 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos3-0 pos3-1 dir-down (1)
move-fat-snake pos2-0 pos3-0 pos3-1 pos2-1 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos2-1 pos2-2 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos2-2 pos1-2 dir-up (1)
move-fat-snake pos2-1 pos2-2 pos1-2 pos1-1 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos1-1 pos0-1 dir-up (1)
move-fat-snake pos1-2 pos1-3 pos0-1 pos0-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos0-0 pos1-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos1-0 pos2-0 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos2-0 pos3-0 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos3-0 pos3-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos3-1 pos2-1 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos2-1 pos2-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos2-2 pos1-2 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-3 pos1-4 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-4 pos1-5 dir-left (1)
move-and-eat pos5-5 pos6-5 dir-down (1)
move-fat-snake pos6-5 pos6-4 pos1-5 pos1-6 dir-left (1)
move-and-eat pos6-4 pos6-3 dir-left (1)
move-and-eat pos6-3 pos6-2 dir-left (1)
move-and-eat pos6-2 pos5-2 dir-up (1)
move-fat-snake pos5-2 pos5-3 pos1-6 pos1-7 dir-right (1)
move-fat-snake pos5-3 pos5-4 pos1-7 pos2-7 dir-right (1)
move-fat-snake pos5-4 pos4-4 pos2-7 pos3-7 dir-up (1)
move-and-eat pos4-4 pos3-4 dir-up (1)
move-and-eat pos3-4 pos3-5 dir-right (1)
Plan length: 64 step(s).
Plan cost: 64
Expanded 7434 state(s).
Reopened 258 state(s).
Evaluated 9239 state(s).
Evaluations: 16416
Generated 10662 state(s).
Dead ends: 1804 state(s).
Number of registered states: 8981
Best solution cost so far: 64
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 3)
Conducting lazy best first search, (real) bound = 64
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=14.7925s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=14.7925s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=14.8043s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=8, 14 evaluated, 13 expanded, t=14.8043s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=9, 17 evaluated, 16 expanded, t=14.8085s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=10, 23 evaluated, 22 expanded, t=14.8085s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=11, 25 evaluated, 24 expanded, t=14.8085s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=12, 26 evaluated, 25 expanded, t=14.8085s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=13, 27 evaluated, 26 expanded, t=14.8174s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
[g=16, 37 evaluated, 36 expanded, t=14.8287s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=17, 39 evaluated, 38 expanded, t=14.8287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 24
[g=18, 40 evaluated, 39 expanded, t=14.8287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=20, 42 evaluated, 41 expanded, t=14.8287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=21, 43 evaluated, 42 expanded, t=14.8287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=23, 46 evaluated, 45 expanded, t=14.8287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=24, 48 evaluated, 47 expanded, t=14.8376s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=25, 49 evaluated, 48 expanded, t=14.8376s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=26, 51 evaluated, 50 expanded, t=14.8376s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=28, 53 evaluated, 52 expanded, t=14.8376s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=31, 59 evaluated, 58 expanded, t=14.8376s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=32, 61 evaluated, 60 expanded, t=14.8376s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=33, 63 evaluated, 62 expanded, t=14.8376s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=34, 65 evaluated, 64 expanded, t=14.8485s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=35, 67 evaluated, 66 expanded, t=14.8485s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=36, 71 evaluated, 70 expanded, t=14.8485s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=37, 75 evaluated, 74 expanded, t=14.8485s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=37, 81 evaluated, 80 expanded, t=14.8601s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=38, 82 evaluated, 81 expanded, t=14.8601s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=39, 83 evaluated, 82 expanded, t=14.8601s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=40, 84 evaluated, 83 expanded, t=14.8601s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=41, 85 evaluated, 84 expanded, t=14.8601s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=42, 86 evaluated, 85 expanded, t=14.8601s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=41, 130 evaluated, 121 expanded, t=14.8683s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=42, 131 evaluated, 122 expanded, t=14.8683s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=49, 1296 evaluated, 1143 expanded, 44 reopened, t=15.4982s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=62, 11377 evaluated, 9174 expanded, 237 reopened, t=21.6059s, 35756 KB]
Solution found!
Actual search time: 6.81339s [t=21.6059s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos5-4 dir-left (1)
move-fat-snake pos5-4 pos5-3 pos5-5 pos5-4 dir-left (1)
move-and-eat pos5-3 pos6-3 dir-down (1)
move-fat-snake pos6-3 pos6-4 pos5-4 pos5-3 dir-right (1)
move-and-eat pos6-4 pos6-5 dir-right (1)
move-fat-snake pos6-5 pos5-5 pos5-3 pos6-3 dir-up (1)
move-fat-snake pos5-5 pos5-6 pos6-3 pos6-4 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos6-4 pos6-5 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos6-5 pos5-5 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos4-7 pos3-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-6 pos1-5 dir-left (1)
move-and-eat pos1-2 pos0-2 dir-up (1)
move-fat-snake pos0-2 pos0-1 pos1-5 pos1-4 dir-left (1)
move-and-eat pos0-1 pos0-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos1-4 pos1-3 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos1-3 pos1-2 dir-down (1)
move-and-eat pos2-0 pos3-0 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos1-2 pos0-2 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos0-2 pos0-1 dir-up (1)
move-and-eat pos2-1 pos2-2 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos0-1 pos0-0 dir-up (1)
move-and-eat pos1-2 pos1-1 dir-left (1)
move-fat-snake pos1-1 pos0-1 pos0-0 pos1-0 dir-up (1)
move-fat-snake pos0-1 pos0-0 pos1-0 pos2-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos2-0 pos3-0 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos3-0 pos3-1 dir-down (1)
move-fat-snake pos2-0 pos3-0 pos3-1 pos2-1 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos2-1 pos2-2 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos2-2 pos1-2 dir-up (1)
move-fat-snake pos2-1 pos2-2 pos1-2 pos1-1 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos1-1 pos0-1 dir-up (1)
move-fat-snake pos1-2 pos1-3 pos0-1 pos0-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos0-0 pos1-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos1-0 pos2-0 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos2-0 pos3-0 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos3-0 pos3-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos3-1 pos2-1 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos2-1 pos2-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos2-2 pos1-2 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-3 pos1-4 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-4 pos1-5 dir-left (1)
move-and-eat pos5-5 pos4-5 dir-up (1)
move-and-eat pos4-5 pos3-5 dir-up (1)
move-and-eat pos3-5 pos3-4 dir-left (1)
move-fat-snake pos3-4 pos4-4 pos1-5 pos1-6 dir-down (1)
move-and-eat pos4-4 pos4-3 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos1-6 pos1-7 dir-down (1)
move-fat-snake pos5-3 pos6-3 pos1-7 pos2-7 dir-down (1)
move-and-eat pos6-3 pos6-2 dir-left (1)
move-and-eat pos6-2 pos5-2 dir-up (1)
Plan length: 63 step(s).
Plan cost: 63
Expanded 9175 state(s).
Reopened 237 state(s).
Evaluated 11378 state(s).
Evaluations: 20317
Generated 13038 state(s).
Dead ends: 2202 state(s).
Number of registered states: 11141
Best solution cost so far: 63
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 2)
Conducting lazy best first search, (real) bound = 63
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=21.6096s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=21.6096s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=21.6096s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=7, 16 evaluated, 15 expanded, t=21.6186s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=8, 18 evaluated, 17 expanded, t=21.6186s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=10, 23 evaluated, 22 expanded, t=21.6186s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=11, 25 evaluated, 24 expanded, t=21.6186s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=11, 27 evaluated, 26 expanded, t=21.6186s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=12, 29 evaluated, 28 expanded, t=21.6186s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=14, 39 evaluated, 38 expanded, t=21.6304s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=16, 44 evaluated, 43 expanded, t=21.6304s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=19, 66 evaluated, 63 expanded, t=21.639s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=21, 70 evaluated, 66 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=22, 71 evaluated, 67 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=23, 72 evaluated, 68 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=24, 73 evaluated, 69 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=26, 77 evaluated, 72 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 13
[g=29, 81 evaluated, 76 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=30, 83 evaluated, 78 expanded, t=21.6503s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 12
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=31, 84 evaluated, 79 expanded, t=21.6503s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=32, 86 evaluated, 81 expanded, t=21.6503s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=33, 88 evaluated, 83 expanded, t=21.6607s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=34, 92 evaluated, 87 expanded, t=21.6607s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=35, 96 evaluated, 91 expanded, t=21.6607s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=35, 102 evaluated, 97 expanded, t=21.6607s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=36, 104 evaluated, 99 expanded, t=21.6607s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 106 evaluated, 101 expanded, 1 reopened, t=21.6607s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 108 evaluated, 103 expanded, 1 reopened, t=21.6711s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=39, 110 evaluated, 105 expanded, 1 reopened, t=21.6711s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=40, 142 evaluated, 135 expanded, 1 reopened, t=21.6822s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 170 evaluated, 160 expanded, 1 reopened, t=21.6912s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 171 evaluated, 161 expanded, 1 reopened, t=21.6912s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=41, 1642 evaluated, 1440 expanded, 23 reopened, t=22.5297s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=60, 14128 evaluated, 11462 expanded, 174 reopened, t=30.7621s, 35756 KB]
Solution found!
Actual search time: 9.15242s [t=30.7621s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos5-4 dir-left (1)
move-fat-snake pos5-4 pos6-4 pos5-5 pos5-4 dir-down (1)
move-and-eat pos6-4 pos6-5 dir-right (1)
move-fat-snake pos6-5 pos5-5 pos5-4 pos6-4 dir-up (1)
move-fat-snake pos5-5 pos5-6 pos6-4 pos6-5 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos6-5 pos5-5 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos4-7 pos3-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-6 pos1-5 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-5 pos1-4 dir-left (1)
move-and-eat pos1-2 pos2-2 dir-down (1)
move-fat-snake pos2-2 pos2-1 pos1-4 pos1-3 dir-left (1)
move-and-eat pos2-1 pos1-1 dir-up (1)
move-fat-snake pos1-1 pos1-0 pos1-3 pos1-2 dir-left (1)
move-and-eat pos1-0 pos0-0 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos1-2 pos2-2 dir-right (1)
move-and-eat pos0-1 pos0-2 dir-right (1)
move-fat-snake pos0-2 pos1-2 pos2-2 pos2-1 dir-down (1)
move-fat-snake pos1-2 pos2-2 pos2-1 pos1-1 dir-down (1)
move-fat-snake pos2-2 pos2-1 pos1-1 pos1-0 dir-left (1)
move-fat-snake pos2-1 pos3-1 pos1-0 pos0-0 dir-down (1)
move-and-eat pos3-1 pos3-0 dir-left (1)
move-fat-snake pos3-0 pos2-0 pos0-0 pos0-1 dir-up (1)
move-fat-snake pos2-0 pos1-0 pos0-1 pos0-2 dir-up (1)
move-fat-snake pos1-0 pos1-1 pos0-2 pos1-2 dir-right (1)
move-fat-snake pos1-1 pos0-1 pos1-2 pos2-2 dir-up (1)
move-fat-snake pos0-1 pos0-2 pos2-2 pos2-1 dir-right (1)
move-fat-snake pos0-2 pos1-2 pos2-1 pos3-1 dir-down (1)
move-fat-snake pos1-2 pos1-3 pos3-1 pos3-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos3-0 pos2-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos2-0 pos1-0 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos1-0 pos1-1 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos1-1 pos0-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos0-1 pos0-2 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos0-2 pos1-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-3 pos1-4 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-4 pos1-5 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-5 pos1-6 dir-left (1)
move-fat-snake pos5-5 pos5-4 pos1-6 pos1-7 dir-left (1)
move-fat-snake pos5-4 pos6-4 pos1-7 pos2-7 dir-down (1)
move-and-eat pos6-4 pos6-3 dir-left (1)
move-and-eat pos6-3 pos6-2 dir-left (1)
move-and-eat pos6-2 pos5-2 dir-up (1)
move-fat-snake pos5-2 pos5-3 pos2-7 pos3-7 dir-right (1)
move-and-eat pos5-3 pos4-3 dir-up (1)
move-fat-snake pos4-3 pos4-4 pos3-7 pos4-7 dir-right (1)
move-and-eat pos4-4 pos3-4 dir-up (1)
move-and-eat pos3-4 pos3-5 dir-right (1)
move-and-eat pos3-5 pos4-5 dir-down (1)
Plan length: 61 step(s).
Plan cost: 61
Expanded 11463 state(s).
Reopened 174 state(s).
Evaluated 14129 state(s).
Evaluations: 25419
Generated 16195 state(s).
Dead ends: 2665 state(s).
Number of registered states: 13955
Best solution cost so far: 61
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 61
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=30.7642s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=30.7642s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=30.7642s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=7, 17 evaluated, 16 expanded, t=30.7732s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=8, 20 evaluated, 19 expanded, t=30.7732s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=8, 39 evaluated, 38 expanded, t=30.7914s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=9, 41 evaluated, 40 expanded, t=30.7914s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=11, 46 evaluated, 44 expanded, t=30.7914s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=11, 47 evaluated, 45 expanded, t=30.7914s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=12, 48 evaluated, 46 expanded, t=30.7914s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=12, 50 evaluated, 48 expanded, t=30.8007s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 11
[g=13, 53 evaluated, 51 expanded, t=30.8055s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=14, 55 evaluated, 53 expanded, t=30.8055s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=15, 57 evaluated, 55 expanded, t=30.8055s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=16, 59 evaluated, 57 expanded, t=30.8055s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=17, 73 evaluated, 70 expanded, t=30.8055s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=18, 213 evaluated, 201 expanded, t=30.9228s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=19, 220 evaluated, 207 expanded, t=30.9278s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=23, 993 evaluated, 904 expanded, 1 reopened, t=31.4854s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=24, 1014 evaluated, 923 expanded, 1 reopened, t=31.5019s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=25, 1020 evaluated, 929 expanded, 1 reopened, t=31.5019s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 15
[g=26, 1025 evaluated, 934 expanded, 1 reopened, t=31.5019s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=27, 1027 evaluated, 936 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=28, 1029 evaluated, 938 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=30, 1032 evaluated, 940 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=32, 1034 evaluated, 942 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=33, 1035 evaluated, 943 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
[g=34, 1036 evaluated, 944 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=34, 1038 evaluated, 946 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=35, 1039 evaluated, 947 expanded, 1 reopened, t=31.5123s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=35, 1336 evaluated, 1212 expanded, 2 reopened, t=31.7388s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=36, 1338 evaluated, 1214 expanded, 2 reopened, t=31.7409s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 1452 evaluated, 1318 expanded, 3 reopened, t=31.8054s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 1483 evaluated, 1348 expanded, 3 reopened, t=31.832s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=39, 1501 evaluated, 1362 expanded, 3 reopened, t=31.8384s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 1502 evaluated, 1363 expanded, 3 reopened, t=31.8384s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 1609 evaluated, 1459 expanded, 3 reopened, t=31.9087s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=41, 4369 evaluated, 3915 expanded, 20 reopened, t=33.599s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=59, 13406 evaluated, 10837 expanded, 28 reopened, t=39.618s, 35756 KB]
Solution found!
Actual search time: 8.85384s [t=39.618s]
move-thin-snake pos1-7 pos1-6 dir-left (1)
move-thin-snake pos1-6 pos1-5 dir-left (1)
move-thin-snake pos1-5 pos1-4 dir-left (1)
move-thin-snake pos1-4 pos1-3 dir-left (1)
move-thin-snake pos1-3 pos1-2 dir-left (1)
move-thin-snake-and-first-eat pos1-2 pos1-1 dir-left (1)
move-fat-snake pos1-1 pos2-1 pos1-2 pos1-1 dir-down (1)
move-fat-snake pos2-1 pos2-0 pos1-1 pos2-1 dir-left (1)
move-fat-snake pos2-0 pos1-0 pos2-1 pos2-0 dir-up (1)
move-fat-snake pos1-0 pos1-1 pos2-0 pos1-0 dir-right (1)
move-fat-snake pos1-1 pos1-2 pos1-0 pos1-1 dir-right (1)
move-fat-snake pos1-2 pos1-3 pos1-1 pos1-2 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos1-2 pos1-3 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos1-3 pos1-4 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos1-4 pos1-5 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos1-5 pos1-6 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos1-6 pos1-7 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos1-7 pos2-7 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos2-7 pos3-7 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos3-7 pos4-7 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos4-7 pos5-7 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos5-7 pos5-6 dir-left (1)
move-and-eat pos5-5 pos5-4 dir-left (1)
move-fat-snake pos5-4 pos5-3 pos5-6 pos5-5 dir-left (1)
move-and-eat pos5-3 pos6-3 dir-down (1)
move-fat-snake pos6-3 pos6-4 pos5-5 pos5-4 dir-right (1)
move-and-eat pos6-4 pos6-5 dir-right (1)
move-fat-snake pos6-5 pos5-5 pos5-4 pos5-3 dir-up (1)
move-and-eat pos5-5 pos4-5 dir-up (1)
move-and-eat pos4-5 pos3-5 dir-up (1)
move-and-eat pos3-5 pos3-4 dir-left (1)
move-fat-snake pos3-4 pos4-4 pos5-3 pos6-3 dir-down (1)
move-and-eat pos4-4 pos4-3 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos6-3 pos6-4 dir-down (1)
move-and-eat pos5-3 pos5-2 dir-left (1)
move-and-eat pos5-2 pos6-2 dir-down (1)
move-fat-snake pos6-2 pos6-3 pos6-4 pos6-5 dir-right (1)
move-fat-snake pos6-3 pos6-4 pos6-5 pos5-5 dir-right (1)
move-fat-snake pos6-4 pos5-4 pos5-5 pos4-5 dir-up (1)
move-fat-snake pos5-4 pos5-5 pos4-5 pos3-5 dir-right (1)
move-fat-snake pos5-5 pos5-6 pos3-5 pos3-4 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos3-4 pos4-4 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos4-4 pos4-3 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos4-3 pos5-3 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-3 pos5-2 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos5-2 pos6-2 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos6-2 pos6-3 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos6-3 pos6-4 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos6-4 pos5-4 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos5-4 pos5-5 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos5-5 pos5-6 dir-left (1)
move-and-eat pos1-2 pos0-2 dir-up (1)
move-fat-snake pos0-2 pos0-1 pos5-6 pos5-7 dir-left (1)
move-and-eat pos0-1 pos0-0 dir-left (1)
move-fat-snake pos0-0 pos1-0 pos5-7 pos4-7 dir-down (1)
move-fat-snake pos1-0 pos2-0 pos4-7 pos3-7 dir-down (1)
move-and-eat pos2-0 pos3-0 dir-down (1)
move-fat-snake pos3-0 pos3-1 pos3-7 pos2-7 dir-right (1)
move-fat-snake pos3-1 pos2-1 pos2-7 pos1-7 dir-up (1)
move-and-eat pos2-1 pos2-2 dir-right (1)
Plan length: 60 step(s).
Plan cost: 60
Expanded 10838 state(s).
Reopened 28 state(s).
Evaluated 13407 state(s).
Evaluations: 24218
Generated 15677 state(s).
Dead ends: 2568 state(s).
Number of registered states: 13379
Best solution cost so far: 60
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 60
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=39.6219s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=39.6219s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=39.6219s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=7, 17 evaluated, 16 expanded, t=39.6303s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=8, 20 evaluated, 19 expanded, t=39.6303s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=8, 39 evaluated, 38 expanded, t=39.6416s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=9, 41 evaluated, 40 expanded, t=39.6416s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=11, 46 evaluated, 44 expanded, t=39.6494s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=11, 47 evaluated, 45 expanded, t=39.6494s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=12, 48 evaluated, 46 expanded, t=39.6494s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=12, 50 evaluated, 48 expanded, t=39.6494s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 11
[g=13, 53 evaluated, 51 expanded, t=39.6494s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=14, 55 evaluated, 53 expanded, t=39.6494s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=15, 57 evaluated, 55 expanded, t=39.6494s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=16, 59 evaluated, 57 expanded, t=39.6613s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=17, 73 evaluated, 70 expanded, t=39.67s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=18, 213 evaluated, 201 expanded, t=39.7528s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=19, 220 evaluated, 207 expanded, t=39.7528s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=23, 993 evaluated, 904 expanded, 1 reopened, t=40.2971s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=24, 1014 evaluated, 923 expanded, 1 reopened, t=40.3158s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=25, 1020 evaluated, 929 expanded, 1 reopened, t=40.3167s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 15
[g=26, 1025 evaluated, 934 expanded, 1 reopened, t=40.3167s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=27, 1027 evaluated, 936 expanded, 1 reopened, t=40.3167s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=28, 1029 evaluated, 938 expanded, 1 reopened, t=40.3167s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=30, 1032 evaluated, 940 expanded, 1 reopened, t=40.3278s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=32, 1034 evaluated, 942 expanded, 1 reopened, t=40.3278s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=33, 1035 evaluated, 943 expanded, 1 reopened, t=40.3278s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
[g=34, 1036 evaluated, 944 expanded, 1 reopened, t=40.3278s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=34, 1038 evaluated, 946 expanded, 1 reopened, t=40.3278s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=35, 1039 evaluated, 947 expanded, 1 reopened, t=40.3278s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=35, 1336 evaluated, 1212 expanded, 2 reopened, t=40.5434s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=36, 1338 evaluated, 1214 expanded, 2 reopened, t=40.5434s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 1452 evaluated, 1318 expanded, 3 reopened, t=40.6051s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 1483 evaluated, 1348 expanded, 3 reopened, t=40.6121s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=39, 1501 evaluated, 1362 expanded, 3 reopened, t=40.6239s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 1502 evaluated, 1363 expanded, 3 reopened, t=40.6239s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 1609 evaluated, 1459 expanded, 3 reopened, t=40.684s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=41, 4369 evaluated, 3915 expanded, 20 reopened, t=42.5523s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=59, 13406 evaluated, 10837 expanded, 28 reopened, t=48.8805s, 35756 KB]
Solution found!
Actual search time: 9.89277s [t=49.5147s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos4-5 dir-up (1)
move-fat-snake pos4-5 pos4-4 pos5-5 pos4-5 dir-left (1)
move-and-eat pos4-4 pos5-4 dir-down (1)
move-fat-snake pos5-4 pos5-5 pos4-5 pos4-4 dir-right (1)
move-fat-snake pos5-5 pos5-6 pos4-4 pos5-4 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos5-4 pos5-5 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos4-7 pos3-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-6 pos1-5 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-5 pos1-4 dir-left (1)
move-and-eat pos1-2 pos2-2 dir-down (1)
move-fat-snake pos2-2 pos2-1 pos1-4 pos1-3 dir-left (1)
move-fat-snake pos2-1 pos2-0 pos1-3 pos1-2 dir-left (1)
move-fat-snake pos2-0 pos1-0 pos1-2 pos2-2 dir-up (1)
move-and-eat pos1-0 pos1-1 dir-right (1)
move-fat-snake pos1-1 pos1-2 pos2-2 pos2-1 dir-right (1)
move-fat-snake pos1-2 pos2-2 pos2-1 pos2-0 dir-down (1)
move-fat-snake pos2-2 pos2-1 pos2-0 pos1-0 dir-left (1)
move-fat-snake pos2-1 pos3-1 pos1-0 pos1-1 dir-down (1)
move-and-eat pos3-1 pos3-0 dir-left (1)
move-fat-snake pos3-0 pos2-0 pos1-1 pos1-2 dir-up (1)
move-fat-snake pos2-0 pos1-0 pos1-2 pos2-2 dir-up (1)
move-and-eat pos1-0 pos0-0 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos2-2 pos2-1 dir-right (1)
move-and-eat pos0-1 pos0-2 dir-right (1)
move-fat-snake pos0-2 pos1-2 pos2-1 pos3-1 dir-down (1)
move-fat-snake pos1-2 pos1-3 pos3-1 pos3-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos3-0 pos2-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos2-0 pos1-0 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos1-0 pos0-0 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos0-0 pos0-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos0-1 pos0-2 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos0-2 pos1-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-3 pos1-4 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-4 pos1-5 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-5 pos1-6 dir-left (1)
move-and-eat pos5-5 pos6-5 dir-down (1)
move-fat-snake pos6-5 pos6-4 pos1-6 pos1-7 dir-left (1)
move-and-eat pos6-4 pos6-3 dir-left (1)
move-and-eat pos6-3 pos6-2 dir-left (1)
move-and-eat pos6-2 pos5-2 dir-up (1)
move-fat-snake pos5-2 pos5-3 pos1-7 pos2-7 dir-right (1)
move-and-eat pos5-3 pos4-3 dir-up (1)
move-fat-snake pos4-3 pos4-4 pos2-7 pos3-7 dir-right (1)
move-and-eat pos4-4 pos3-4 dir-up (1)
move-and-eat pos3-4 pos3-5 dir-right (1)
Plan length: 58 step(s).
Plan cost: 58
Expanded 11489 state(s).
Reopened 34 state(s).
Evaluated 14229 state(s).
Evaluations: 25685
Generated 16538 state(s).
Dead ends: 2739 state(s).
Number of registered states: 14195
Best solution cost so far: 58
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 58
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=49.5185s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=49.5228s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=49.5228s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=7, 17 evaluated, 16 expanded, t=49.5228s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=8, 20 evaluated, 19 expanded, t=49.5228s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=8, 39 evaluated, 38 expanded, t=49.5488s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=9, 41 evaluated, 40 expanded, t=49.5488s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=11, 46 evaluated, 44 expanded, t=49.5488s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=11, 47 evaluated, 45 expanded, t=49.5488s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=12, 48 evaluated, 46 expanded, t=49.5488s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=12, 50 evaluated, 48 expanded, t=49.56s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 11
[g=13, 53 evaluated, 51 expanded, t=49.5625s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=14, 55 evaluated, 53 expanded, t=49.5625s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=15, 57 evaluated, 55 expanded, t=49.5625s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=16, 59 evaluated, 57 expanded, t=49.5625s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=17, 73 evaluated, 70 expanded, t=49.5723s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=18, 213 evaluated, 201 expanded, t=49.7233s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=19, 220 evaluated, 207 expanded, t=49.7233s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=23, 993 evaluated, 904 expanded, 1 reopened, t=50.4104s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=24, 1014 evaluated, 923 expanded, 1 reopened, t=50.4273s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=25, 1020 evaluated, 929 expanded, 1 reopened, t=50.4287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 15
[g=26, 1025 evaluated, 934 expanded, 1 reopened, t=50.4287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=27, 1027 evaluated, 936 expanded, 1 reopened, t=50.4287s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=28, 1029 evaluated, 938 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=30, 1032 evaluated, 940 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=32, 1034 evaluated, 942 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=33, 1035 evaluated, 943 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
[g=34, 1036 evaluated, 944 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=34, 1038 evaluated, 946 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=35, 1039 evaluated, 947 expanded, 1 reopened, t=50.4416s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=35, 1336 evaluated, 1212 expanded, 2 reopened, t=50.7724s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=36, 1338 evaluated, 1214 expanded, 2 reopened, t=50.7751s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 1452 evaluated, 1318 expanded, 3 reopened, t=50.8693s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 1483 evaluated, 1348 expanded, 3 reopened, t=50.8851s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=39, 1501 evaluated, 1362 expanded, 3 reopened, t=50.8895s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 1502 evaluated, 1363 expanded, 3 reopened, t=50.8895s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 1609 evaluated, 1459 expanded, 3 reopened, t=50.9319s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=41, 4369 evaluated, 3915 expanded, 20 reopened, t=52.8099s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=57, 14220 evaluated, 11481 expanded, 34 reopened, t=58.9688s, 35756 KB]
Solution found!
Actual search time: 9.55942s [t=59.0779s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos6-5 dir-down (1)
move-fat-snake pos6-5 pos6-4 pos5-5 pos6-5 dir-left (1)
move-and-eat pos6-4 pos5-4 dir-up (1)
move-fat-snake pos5-4 pos5-5 pos6-5 pos6-4 dir-right (1)
move-fat-snake pos5-5 pos5-6 pos6-4 pos5-4 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos5-4 pos5-5 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos4-7 pos3-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-6 pos1-5 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-5 pos1-4 dir-left (1)
move-and-eat pos1-2 pos2-2 dir-down (1)
move-fat-snake pos2-2 pos2-1 pos1-4 pos1-3 dir-left (1)
move-fat-snake pos2-1 pos2-0 pos1-3 pos1-2 dir-left (1)
move-fat-snake pos2-0 pos1-0 pos1-2 pos2-2 dir-up (1)
move-and-eat pos1-0 pos1-1 dir-right (1)
move-fat-snake pos1-1 pos1-2 pos2-2 pos2-1 dir-right (1)
move-fat-snake pos1-2 pos2-2 pos2-1 pos2-0 dir-down (1)
move-fat-snake pos2-2 pos2-1 pos2-0 pos1-0 dir-left (1)
move-fat-snake pos2-1 pos3-1 pos1-0 pos1-1 dir-down (1)
move-and-eat pos3-1 pos3-0 dir-left (1)
move-fat-snake pos3-0 pos2-0 pos1-1 pos1-2 dir-up (1)
move-fat-snake pos2-0 pos1-0 pos1-2 pos2-2 dir-up (1)
move-and-eat pos1-0 pos0-0 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos2-2 pos2-1 dir-right (1)
move-and-eat pos0-1 pos0-2 dir-right (1)
move-fat-snake pos0-2 pos1-2 pos2-1 pos3-1 dir-down (1)
move-fat-snake pos1-2 pos1-3 pos3-1 pos3-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos3-0 pos2-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos2-0 pos1-0 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos1-0 pos0-0 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos0-0 pos0-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos0-1 pos0-2 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos0-2 pos1-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-3 pos1-4 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-4 pos1-5 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-5 pos1-6 dir-left (1)
move-and-eat pos5-5 pos4-5 dir-up (1)
move-and-eat pos4-5 pos3-5 dir-up (1)
move-and-eat pos3-5 pos3-4 dir-left (1)
move-fat-snake pos3-4 pos4-4 pos1-6 pos1-7 dir-down (1)
move-and-eat pos4-4 pos4-3 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos1-7 pos2-7 dir-down (1)
move-and-eat pos5-3 pos5-2 dir-left (1)
move-and-eat pos5-2 pos6-2 dir-down (1)
move-and-eat pos6-2 pos6-3 dir-right (1)
Plan length: 57 step(s).
Plan cost: 57
Expanded 11671 state(s).
Reopened 34 state(s).
Evaluated 14432 state(s).
Evaluations: 26070
Generated 16791 state(s).
Dead ends: 2760 state(s).
Number of registered states: 14398
Best solution cost so far: 57
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 57
28 initial landmarks, 14 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
[g=0, 1 evaluated, 0 expanded, t=59.0779s, 35756 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=59.0779s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=59.0779s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=7, 17 evaluated, 16 expanded, t=59.0891s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=8, 20 evaluated, 19 expanded, t=59.0891s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=8, 39 evaluated, 38 expanded, t=59.0969s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=9, 41 evaluated, 40 expanded, t=59.0969s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
[g=11, 46 evaluated, 44 expanded, t=59.1085s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=11, 47 evaluated, 45 expanded, t=59.1085s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=12, 48 evaluated, 46 expanded, t=59.1085s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=12, 50 evaluated, 48 expanded, t=59.1085s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 11
[g=13, 53 evaluated, 51 expanded, t=59.1085s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
[g=14, 55 evaluated, 53 expanded, t=59.1085s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=15, 57 evaluated, 55 expanded, t=59.1085s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=16, 59 evaluated, 57 expanded, t=59.1166s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
[g=17, 73 evaluated, 70 expanded, t=59.1166s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=18, 213 evaluated, 201 expanded, t=59.2154s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=19, 220 evaluated, 207 expanded, t=59.2154s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=23, 993 evaluated, 904 expanded, 1 reopened, t=59.8252s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=24, 1014 evaluated, 923 expanded, 1 reopened, t=59.8383s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=25, 1020 evaluated, 929 expanded, 1 reopened, t=59.8407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 15
[g=26, 1025 evaluated, 934 expanded, 1 reopened, t=59.8407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=27, 1027 evaluated, 936 expanded, 1 reopened, t=59.8407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=28, 1029 evaluated, 938 expanded, 1 reopened, t=59.8407s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=30, 1032 evaluated, 940 expanded, 1 reopened, t=59.8518s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=32, 1034 evaluated, 942 expanded, 1 reopened, t=59.8518s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=33, 1035 evaluated, 943 expanded, 1 reopened, t=59.8518s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
[g=34, 1036 evaluated, 944 expanded, 1 reopened, t=59.8518s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=34, 1038 evaluated, 946 expanded, 1 reopened, t=59.8518s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=35, 1039 evaluated, 947 expanded, 1 reopened, t=59.8518s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=35, 1336 evaluated, 1212 expanded, 2 reopened, t=60.0386s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=36, 1338 evaluated, 1214 expanded, 2 reopened, t=60.0386s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 1452 evaluated, 1318 expanded, 3 reopened, t=60.1069s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=38, 1483 evaluated, 1348 expanded, 3 reopened, t=60.1221s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=39, 1501 evaluated, 1362 expanded, 3 reopened, t=60.1336s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 1502 evaluated, 1363 expanded, 3 reopened, t=60.1336s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 1609 evaluated, 1459 expanded, 3 reopened, t=60.1795s, 35756 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=41, 4369 evaluated, 3915 expanded, 20 reopened, t=61.8968s, 35756 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=56, 14419 evaluated, 11660 expanded, 34 reopened, t=68.0562s, 35756 KB]
Solution found!
Actual search time: 28.3376s [t=87.4156s]
move-thin-snake pos1-7 pos2-7 dir-down (1)
move-thin-snake pos2-7 pos3-7 dir-down (1)
move-thin-snake pos3-7 pos4-7 dir-down (1)
move-thin-snake pos4-7 pos5-7 dir-down (1)
move-thin-snake pos5-7 pos5-6 dir-left (1)
move-thin-snake pos5-6 pos5-5 dir-left (1)
move-thin-snake-and-first-eat pos5-5 pos6-5 dir-down (1)
move-fat-snake pos6-5 pos6-4 pos5-5 pos6-5 dir-left (1)
move-and-eat pos6-4 pos5-4 dir-up (1)
move-fat-snake pos5-4 pos5-5 pos6-5 pos6-4 dir-right (1)
move-fat-snake pos5-5 pos5-6 pos6-4 pos5-4 dir-right (1)
move-fat-snake pos5-6 pos5-7 pos5-4 pos5-5 dir-right (1)
move-fat-snake pos5-7 pos4-7 pos5-5 pos5-6 dir-up (1)
move-fat-snake pos4-7 pos3-7 pos5-6 pos5-7 dir-up (1)
move-fat-snake pos3-7 pos2-7 pos5-7 pos4-7 dir-up (1)
move-fat-snake pos2-7 pos1-7 pos4-7 pos3-7 dir-up (1)
move-fat-snake pos1-7 pos1-6 pos3-7 pos2-7 dir-left (1)
move-fat-snake pos1-6 pos1-5 pos2-7 pos1-7 dir-left (1)
move-fat-snake pos1-5 pos1-4 pos1-7 pos1-6 dir-left (1)
move-fat-snake pos1-4 pos1-3 pos1-6 pos1-5 dir-left (1)
move-fat-snake pos1-3 pos1-2 pos1-5 pos1-4 dir-left (1)
move-and-eat pos1-2 pos0-2 dir-up (1)
move-fat-snake pos0-2 pos0-1 pos1-4 pos1-3 dir-left (1)
move-and-eat pos0-1 pos1-1 dir-down (1)
move-fat-snake pos1-1 pos2-1 pos1-3 pos1-2 dir-down (1)
move-fat-snake pos2-1 pos3-1 pos1-2 pos0-2 dir-down (1)
move-and-eat pos3-1 pos3-0 dir-left (1)
move-fat-snake pos3-0 pos2-0 pos0-2 pos0-1 dir-up (1)
move-fat-snake pos2-0 pos1-0 pos0-1 pos1-1 dir-up (1)
move-and-eat pos1-0 pos0-0 dir-up (1)
move-fat-snake pos0-0 pos0-1 pos1-1 pos2-1 dir-right (1)
move-fat-snake pos0-1 pos1-1 pos2-1 pos3-1 dir-down (1)
move-fat-snake pos1-1 pos2-1 pos3-1 pos3-0 dir-down (1)
move-and-eat pos2-1 pos2-2 dir-right (1)
move-fat-snake pos2-2 pos1-2 pos3-0 pos2-0 dir-up (1)
move-fat-snake pos1-2 pos1-3 pos2-0 pos1-0 dir-right (1)
move-fat-snake pos1-3 pos1-4 pos1-0 pos0-0 dir-right (1)
move-fat-snake pos1-4 pos1-5 pos0-0 pos0-1 dir-right (1)
move-fat-snake pos1-5 pos1-6 pos0-1 pos1-1 dir-right (1)
move-fat-snake pos1-6 pos1-7 pos1-1 pos2-1 dir-right (1)
move-fat-snake pos1-7 pos2-7 pos2-1 pos2-2 dir-down (1)
move-fat-snake pos2-7 pos3-7 pos2-2 pos1-2 dir-down (1)
move-fat-snake pos3-7 pos4-7 pos1-2 pos1-3 dir-down (1)
move-fat-snake pos4-7 pos5-7 pos1-3 pos1-4 dir-down (1)
move-fat-snake pos5-7 pos5-6 pos1-4 pos1-5 dir-left (1)
move-fat-snake pos5-6 pos5-5 pos1-5 pos1-6 dir-left (1)
move-and-eat pos5-5 pos4-5 dir-up (1)
move-and-eat pos4-5 pos3-5 dir-up (1)
move-and-eat pos3-5 pos3-4 dir-left (1)
move-fat-snake pos3-4 pos4-4 pos1-6 pos1-7 dir-down (1)
move-and-eat pos4-4 pos4-3 dir-left (1)
move-fat-snake pos4-3 pos5-3 pos1-7 pos2-7 dir-down (1)
move-and-eat pos5-3 pos5-2 dir-left (1)
move-and-eat pos5-2 pos6-2 dir-down (1)
move-and-eat pos6-2 pos6-3 dir-right (1)
Plan length: 55 step(s).
Plan cost: 55
Expanded 36210 state(s).
Reopened 685 state(s).
Evaluated 43475 state(s).
Evaluations: 79001
Generated 51435 state(s).
Dead ends: 7264 state(s).
Number of registered states: 42790
Best solution cost so far: 55
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 55
28 initial landmarks, 14 goal landmarks
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 30
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
[g=0, 1 evaluated, 0 expanded, t=87.4167s, 39984 KB]
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 30
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 20
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 28
[g=1, 3 evaluated, 2 expanded, t=87.4266s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 19
[g=6, 12 evaluated, 11 expanded, t=87.4266s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 18
[g=7, 17 evaluated, 16 expanded, t=87.4377s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 17
[g=8, 20 evaluated, 19 expanded, t=87.4377s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 16
[g=8, 39 evaluated, 38 expanded, t=87.4497s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 15
[g=9, 41 evaluated, 40 expanded, t=87.4497s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 27
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 14
[g=11, 46 evaluated, 44 expanded, t=87.4577s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 26
[g=11, 47 evaluated, 45 expanded, t=87.4577s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 13
[g=12, 48 evaluated, 46 expanded, t=87.4577s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 25
[g=12, 50 evaluated, 48 expanded, t=87.4577s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 11
[g=13, 53 evaluated, 51 expanded, t=87.4577s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 23
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
[g=14, 55 evaluated, 53 expanded, t=87.4577s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=15, 57 evaluated, 55 expanded, t=87.4738s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 22
[g=16, 59 evaluated, 57 expanded, t=87.4738s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 20
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
[g=17, 73 evaluated, 70 expanded, t=87.4789s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 19
[g=18, 213 evaluated, 201 expanded, t=87.6108s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=19, 220 evaluated, 207 expanded, t=87.6132s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 18
[g=23, 993 evaluated, 904 expanded, 1 reopened, t=88.168s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 17
[g=24, 1014 evaluated, 923 expanded, 1 reopened, t=88.1796s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 16
[g=25, 1020 evaluated, 929 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 15
[g=26, 1025 evaluated, 934 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 14
[g=27, 1027 evaluated, 936 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 12
[g=28, 1029 evaluated, 938 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=30, 1032 evaluated, 940 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=32, 1034 evaluated, 942 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=33, 1035 evaluated, 943 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
[g=34, 1036 evaluated, 944 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=34, 1038 evaluated, 946 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=35, 1039 evaluated, 947 expanded, 1 reopened, t=88.1824s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=35, 1336 evaluated, 1212 expanded, 2 reopened, t=88.3706s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
[g=36, 1338 evaluated, 1214 expanded, 2 reopened, t=88.3706s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=37, 1452 evaluated, 1318 expanded, 3 reopened, t=88.4359s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=38, 1483 evaluated, 1348 expanded, 3 reopened, t=88.4527s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=39, 1501 evaluated, 1362 expanded, 3 reopened, t=88.4558s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=39, 1502 evaluated, 1363 expanded, 3 reopened, t=88.4558s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=40, 1609 evaluated, 1459 expanded, 3 reopened, t=88.5402s, 39984 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
[g=41, 4369 evaluated, 3915 expanded, 20 reopened, t=90.2179s, 39984 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=54, 43045 evaluated, 35929 expanded, 686 reopened, t=116.492s, 39984 KB]
Completely explored state space -- no solution!
Actual search time: 31.6788s [t=119.095s]
Expanded 40779 state(s).
Reopened 2665 state(s).
Evaluated 48408 state(s).
Evaluations: 86522
Generated 57580 state(s).
Dead ends: 7629 state(s).
Number of registered states: 45743
Best solution cost so far: 55
No solution found - keep searching
Actual search time: 118.68s [t=119.103s]
Cumulative statistics:
Expanded 150616 state(s).
Reopened 4115 state(s).
Evaluated 183262 state(s).
Evaluations: 329771
Generated 214278 state(s).
Dead ends: 0 state(s).
Search time: 118.68s
Total time: 119.103s
Solution found.
Peak memory: 40252 KB
